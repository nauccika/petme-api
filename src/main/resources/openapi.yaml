openapi: 3.0.2
info:
  title: Petme3 API
  version: '0.1'
servers:
  - url: 'https://api.server.test/v1'
paths:
  /v1/login:
    post:
      summary: 로그인
      description: 12p 로그인 버튼 클릭시 호출
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - loginId
                - password
                - loginType
              properties:
                loginId:
                  $ref: '#/components/schemas/loginId'
                password:
                  $ref: '#/components/schemas/password'
                loginType:
                  $ref: '#/components/schemas/loginType'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                required:
                  - token
                properties:
                  token:
                    $ref: '#/components/schemas/token'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/emails/check:
    get:
      summary: 이메일 중복 확인
      description: |
        13p 중복확인 클릭시 호출<br> 응답이 200이면 중복, 204인 경우 정상<br>
      parameters:
        - name: email
          in: query
          description: 이메일
          required: true
          schema:
            $ref: '#/components/schemas/email'
      responses:
        '204':
          description: 정상
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users:
    get:
      security:
        - bearerAuth: []
      summary: 내정보 조회
      description: 28p 내정보 조회
      responses:
        '200':
          description: 정상
          content:
            application/json:
              schema:
                type: object
                required:
                  - userName
                  - email
                  - reviewCount
                  - point
                  - watchCount
                  - pushOnOff
                properties:
                  userName:
                    $ref: '#/components/schemas/userName'
                  email:
                    $ref: '#/components/schemas/email'
                  reviewCount:
                    $ref: '#/components/schemas/reviewCount'
                  point:
                    $ref: '#/components/schemas/point'
                  watchCount:
                    $ref: '#/components/schemas/watchCount'
                  pushOnOff:
                    $ref: '#/components/schemas/pushOnOff'
    post:
      summary: 회원 가입
      description: |
        13p 회원 가입 요청<br> sns 로그인을 통한 회원 가입은 어떻게 처리할 것인가?<br>
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - loginId
                - password
                - phone
                - otp
                - termsIds
              properties:
                loginId:
                  $ref: '#/components/schemas/loginId'
                password:
                  $ref: '#/components/schemas/password'
                phone:
                  $ref: '#/components/schemas/phone'
                otp:
                  $ref: '#/components/schemas/otp'
                termsIds:
                  type: array
                  items:
                    example:
                      - 1
                      - 2
                      - 3
                    $ref: '#/components/schemas/termsId'
      responses:
        '201':
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/opts:
    post:
      summary: 인증번호 전송
      description: |
        휴대폰 인증을 위해 sms로 otp를 발송<br> sms로 otp 발송 후 phone, otp, registerTime, expirationTime 를 저장해야 한다<br>
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  $ref: '#/components/schemas/phone'
              required:
                - phone
      responses:
        '201':
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/emails:
    get:
      summary: 이메일주소 찾기
      description: 기획서 15p 이메일주소 찾기 클릭시
      parameters:
        - name: phone
          in: query
          description: 휴대폰
          required: true
          schema:
            $ref: '#/components/schemas/phone'
        - name: otp
          in: query
          description: otp
          required: true
          schema:
            $ref: '#/components/schemas/otp'
      responses:
        '200':
          description: 이메일
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    $ref: '#/components/schemas/email'
                required:
                  - email
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/passwords:
    get:
      summary: 비밀번호 찾기
      description: 17p 비밀번호 찾기 클릭
      parameters:
        - name: phone
          in: query
          description: 휴대폰
          required: true
          schema:
            $ref: '#/components/schemas/phone'
        - name: otp
          in: query
          description: otp
          required: true
          schema:
            $ref: '#/components/schemas/otp'
      responses:
        '200':
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    put:
      summary: 비밀번호 재설정
      description: 18p 확인 버튼 클릭
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  $ref: '#/components/schemas/phone'
                otp:
                  $ref: '#/components/schemas/otp'
                password:
                  $ref: '#/components/schemas/password'
              required:
                - phone
                - otp
                - password
      responses:
        '200':
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/terms:
    get:
      summary: 약관 목록 조회
      description: |
        약관을 DB로 관리하지 않을 경우 필요 없다<br>
      responses:
        '200':
          description: 정상
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: 약관 내용
                  required:
                    - title
                    - content
                    - requiredYn
                    - order
                  properties:
                    title:
                      $ref: '#/components/schemas/title'
                    content:
                      $ref: '#/components/schemas/content'
                    requiredYn:
                      $ref: '#/components/schemas/requiredYn'
                    order:
                      $ref: '#/components/schemas/order'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/name:
    put:
      summary: 내정보 수정
      description: 37p 닉네임 수정
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userName:
                  $ref: '#/components/schemas/userName'
              required:
                - userName
      responses:
        '200':
          description: Ok
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/password:
    put:
      summary: 비밀번호 수정
      description: 38p 비밀번호 변경
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  $ref: '#/components/schemas/password'
                newPassword:
                  $ref: '#/components/schemas/newPassword'
              required:
                - password
                - newPassword
      responses:
        '200':
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/phone:
    put:
      summary: 휴대폰번호 변경
      description: 39p 휴대폰번호 변경
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  $ref: '#/components/schemas/phone'
                otp:
                  $ref: '#/components/schemas/otp'
              required:
                - phone
                - otp
      responses:
        '200':
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/withdrawal:
    post:
      summary: 회원 탈퇴
      description: 41p 회원 탈퇴
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  $ref: '#/components/schemas/withdrawalCause'
      responses:
        '200':
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/reviews:
    get:
      summary: 내 리뷰 목록
      description: 44p 마이-리뷰
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: true
          description: 페이지 번호
          schema:
            $ref: '#/components/schemas/page'
        - name: size
          in: query
          required: true
          description: 페이지 사이즈
          schema:
            $ref: '#/components/schemas/size'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    reviewId:
                      $ref: '#/components/schemas/reviewId'
                    grade:
                      $ref: '#/components/schemas/grade'
                    placeName:
                      $ref: '#/components/schemas/placeNam'
                    registerTime:
                      $ref: '#/components/schemas/registerTime'
                    keyword:
                      $ref: '#/components/schemas/keyword'
                    content:
                      $ref: '#/components/schemas/content'
                    imageUrls:
                      type: array
                      items:
                        $ref: '#/components/schemas/imageUrl'
                  required:
                    - reviewId
                    - grade
                    - placeName
                    - registerTime
                    - keyword
                    - content
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  '/v1/users/reviews/{reviewId}':
    delete:
      summary: 리뷰 삭제
      description: 44p 마이-리뷰 삭제
      security:
        - bearerAuth: []
      parameters:
        - name: reviewId
          in: path
          required: true
          description: 리뷰 아이디
          schema:
            $ref: '#/components/schemas/reviewId'
      responses:
        '200':
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/points:
    get:
      summary: 포인트 사용 내역
      description: 47p 마이-포인트
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                required:
                  - currentPoint
                  - pointHistories
                properties:
                  currentPoint:
                    $ref: '#/components/schemas/currentPoint'
                  pointHistories:
                    type: array
                    items:
                      type: object
                      properties:
                        pointGubun:
                          $ref: '#/components/schemas/pointGubun'
                        usedPoint:
                          $ref: '#/components/schemas/usedPoint'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/watches/places:
    get:
      summary: 마이찜-장소
      description: 52p 마이-찜-장소
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: true
          description: 페이지 번호
          schema:
            $ref: '#/components/schemas/page'
        - name: size
          in: query
          required: true
          description: 페이지 사이즈
          schema:
            $ref: '#/components/schemas/size'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    placeId:
                      $ref: '#/components/schemas/placeId'
                    placeName:
                      $ref: '#/components/schemas/placeNam'
                    period:
                      $ref: '#/components/schemas/period'
                    ranking:
                      $ref: '#/components/schemas/ranking'
                    blogReviewCount:
                      $ref: '#/components/schemas/blogReviewCount'
                    visitorReviewCount:
                      $ref: '#/components/schemas/visitorReviewCount'
                    distance:
                      $ref: '#/components/schemas/distance'
                    openYn:
                      $ref: '#/components/schemas/openYn'
                    openTime:
                      $ref: '#/components/schemas/openTime'
                    imageUrls:
                      type: array
                      items:
                        $ref: '#/components/schemas/imageUrl'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/watches/contents:
    get:
      summary: 마이찜-콘텐츠
      description: 52p 마이-찜-콘텐츠
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: true
          description: 페이지 번호
          schema:
            $ref: '#/components/schemas/page'
        - name: size
          in: query
          required: true
          description: 페이지 사이즈
          schema:
            $ref: '#/components/schemas/size'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    raboratoryId:
                      $ref: '#/components/schemas/raboratoryId'
                    category:
                      $ref: '#/components/schemas/category'
                    title:
                      $ref: '#/components/schemas/title'
                    hashtag:
                      $ref: '#/components/schemas/hashtag'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/watches/qnas:
    get:
      summary: 마이찜-Q&A
      description: 52p 마이-찜-펫 연구소 Q&A
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: true
          description: 페이지 번호
          schema:
            $ref: '#/components/schemas/page'
        - name: size
          in: query
          required: true
          description: 페이지 사이즈
          schema:
            $ref: '#/components/schemas/size'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    qnaId:
                      $ref: '#/components/schemas/qnaId'
                    category:
                      $ref: '#/components/schemas/category'
                    title:
                      $ref: '#/components/schemas/title'
                    writer:
                      $ref: '#/components/schemas/writer'
                    writerName:
                      $ref: '#/components/schemas/writerName'
                    readCount:
                      $ref: '#/components/schemas/readCount'
                    registerTime:
                      $ref: '#/components/schemas/registerTime'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  '/v1/users/watches/{watchId}':
    delete:
      summary: 찜 삭제
      description: 52p 마이-찜-삭제
      security:
        - bearerAuth: []
      parameters:
        - name: watchId
          in: path
          required: true
          description: 찜 아이디
          schema:
            $ref: '#/components/schemas/watchId'
      responses:
        '200':
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/qnas:
    get:
      summary: 펫 연구소 Q&A 작성글
      description: 55p 마이-펫 연구소 작성글
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: true
          description: 페이지 번호
          schema:
            $ref: '#/components/schemas/page'
        - name: size
          in: query
          required: true
          description: 페이지 사이즈
          schema:
            $ref: '#/components/schemas/size'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - category
                    - title
                    - writer
                    - writeTime
                    - commentCount
                    - imageUrl
                  properties:
                    category:
                      $ref: '#/components/schemas/category'
                    title:
                      $ref: '#/components/schemas/title'
                    writer:
                      $ref: '#/components/schemas/writer'
                    writeTime:
                      $ref: '#/components/schemas/writeTime'
                    commentCount:
                      type: integer
                      description: 댓글 수
                    imageUrl:
                      $ref: '#/components/schemas/imageUrl'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/qnas/comments:
    get:
      summary: 펫 연구소 Q&A 댓글
      description: 55p 마이-펫연구소 작성 댓글
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: true
          description: 페이지 번호
          schema:
            $ref: '#/components/schemas/page'
        - name: size
          in: query
          required: true
          description: 페이지 사이즈
          schema:
            $ref: '#/components/schemas/size'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - title
                    - content
                    - writeTime
                    - imageUrl
                  properties:
                    title:
                      $ref: '#/components/schemas/title'
                    content:
                      $ref: '#/components/schemas/content'
                    writeTime:
                      $ref: '#/components/schemas/writeTime'
                    imageUrl:
                      $ref: '#/components/schemas/imageUrl'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/news:
    get:
      summary: 마이-이벤트/공지사항
      description: |
        57p 마이-이벤트/공지사항<br> 응답 필드 미정
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: true
          description: 페이지 번호
          schema:
            $ref: '#/components/schemas/page'
        - name: size
          in: query
          required: true
          description: 페이지 사이즈
          schema:
            $ref: '#/components/schemas/size'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    eventId:
                      $ref: '#/components/schemas/eventId'
                    title:
                      $ref: '#/components/schemas/title'
                    registerTime:
                      $ref: '#/components/schemas/registerTime'
                    imageUrl:
                      $ref: '#/components/schemas/imageUrl'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  '/v1/events/{eventId}':
    get:
      summary: 이벤트 상세
      description: 58p 이벤트 상세
      security:
        - bearerAuth: []
      parameters:
        - name: eventId
          in: path
          required: true
          description: 이벤트 아이디
          schema:
            $ref: '#/components/schemas/eventId'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                required:
                  - title
                  - content
                  - eventStartDate
                  - eventEndDate
                  - imageUrl
                properties:
                  title:
                    $ref: '#/components/schemas/title'
                  content:
                    $ref: '#/components/schemas/content'
                  eventStartDate:
                    $ref: '#/components/schemas/eventStartDate'
                  eventEndDate:
                    $ref: '#/components/schemas/eventEndDate'
                  imageUrl:
                    $ref: '#/components/schemas/imageUrl'
                  linkUrl:
                    $ref: '#/components/schemas/linkUrl'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  '/v1/notices/{noticeId}':
    get:
      summary: 공지
      description: 59p 공지 상세
      security:
        - bearerAuth: []
      parameters:
        - name: noticeId
          in: path
          required: true
          description: 공지사항 아이디
          schema:
            $ref: '#/components/schemas/noticeId'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    $ref: '#/components/schemas/title'
                  writer:
                    $ref: '#/components/schemas/writer'
                  writerName:
                    $ref: '#/components/schemas/writerName'
                  content:
                    $ref: '#/components/schemas/content'
                  htmlYn:
                    $ref: '#/components/schemas/htmlYn'
                  readCount:
                    $ref: '#/components/schemas/readCount'
                  registerTime:
                    $ref: '#/components/schemas/registerTime'
                  linkUrl:
                    $ref: '#/components/schemas/linkUrl'
                  imageUrls:
                    $ref: '#/components/schemas/imageUrl'
                  noticeGubun:
                    $ref: '#/components/schemas/noticeGubun'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/reviews/count:
    get:
      summary: 누적 리뷰수
      description: 메인 - 누적 리뷰수
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - totalReviewCount
                properties:
                  totalReviewCount:
                    $ref: '#/components/schemas/totalReviewCount'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/rankings/categories:
    get:
      summary: 랭킹 카테고리 목록
      description: |
        62p 메인-랭킹 카테고리
        ```
        select business_gubun
          from tb_place
        group by business_gubun;
        ```
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: 랭킹
                  properties:
                    title:
                      $ref: '#/components/schemas/title'
                    imageUrl:
                      $ref: '#/components/schemas/imageUrl'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/rankings:
    get:
      summary: 랭킹 목록
      description: |
        62p 메인-내주변 랭킹
        ```
        -- 랭킹리스트
        select
        a.id as placeId,
        a.name as placeName,
        a.ranking,
        a.blog_review_count as blogReviewCount,
        a.visitor_review_count as visitorReviewCount,
        round(ST_Distance_Sphere(ST_GeomFromText('POINT(127.027528 37.497637)'), POINT(longitude, latitude)), 0) as distance,
        b.all_year_round_yn as allYearRoundYn,
        a.street_name_address as streetNameAddress,
        a.blog_review_count as blogReviewCount,
        fn_open_yn(a.id) as openYn,
        fn_open_time(a.id) as openTime
        from tb_place a
        left outer join tb_place_business_hours b on a.id = b.tb_place_id
        where zipcode >= (select min(zipcode) from tb_zipcode where sido = '서울특별시' and sigungu = '강남구')
        and zipcode <= (select max(zipcode) from tb_zipcode where sido = '서울특별시' and sigungu = '강남구')
        limit 0, 10;

        -- 랭킹파일 리스트
        select b.original_name as imageUrl
        from tb_place a, tb_file b
        where a.id = b.tb_place_id
        and a.id = 1;
        ```
      parameters:
        - name: businessGubun
          in: query
          required: true
          description: 장소 구분
          schema:
            $ref: '#/components/schemas/businessGubun'
        - name: zipcode
          in: query
          required: false
          description: '값이 null인 경우는 위도, 경도로 내 주변 검색'
          schema:
            $ref: '#/components/schemas/zipcode'
        - name: rankingOrder
          in: query
          required: true
          description: 기간
          schema:
            $ref: '#/components/schemas/rankingOrder'
        - name: weekendOpenYn
          in: query
          required: true
          description: 주말 진료 여부
          schema:
            $ref: '#/components/schemas/weekendOpenYn'
        - name: allDayOpenYn
          in: query
          required: true
          description: 24시간 진료 여부
          schema:
            $ref: '#/components/schemas/allDayOpenYn'
        - name: latitude
          in: query
          required: true
          description: 위도 좌표
          schema:
            $ref: '#/components/schemas/latitude'
        - name: longitude
          in: query
          required: true
          description: 경도 좌표
          schema:
            $ref: '#/components/schemas/longitude'
        - name: page
          in: query
          required: true
          description: 페이지 번호
          schema:
            $ref: '#/components/schemas/page'
        - name: size
          in: query
          required: true
          description: 페이지 사이즈
          schema:
            $ref: '#/components/schemas/size'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: 랭킹
                  properties:
                    placeId:
                      $ref: '#/components/schemas/placeId'
                    placeName:
                      $ref: '#/components/schemas/placeNam'
                    ranking:
                      $ref: '#/components/schemas/ranking'
                    blogReviewCount:
                      $ref: '#/components/schemas/blogReviewCount'
                    visitorReviewCount:
                      $ref: '#/components/schemas/visitorReviewCount'
                    distance:
                      $ref: '#/components/schemas/distance'
                    allYearRoundYn:
                      $ref: '#/components/schemas/allYearRoundYn'
                    streetNameAddress:
                      $ref: '#/components/schemas/streetNameAddress'
                    openYn:
                      $ref: '#/components/schemas/openYn'
                    openTime:
                      $ref: '#/components/schemas/openTime'
                    imageUrls:
                      type: array
                      items:
                        $ref: '#/components/schemas/imageUrl'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/reviews:
    get:
      summary: 베스트 리뷰 목록
      parameters:
        - name: businessGubun
          in: query
          required: true
          description: 장소 구분
          schema:
            $ref: '#/components/schemas/businessGubun'
        - name: zipcode
          in: query
          required: false
          description: '값이 null인 경우는 위도, 경도로 내 주변 검색'
          schema:
            $ref: '#/components/schemas/zipcode'
        - name: latitude
          in: query
          required: true
          description: 위도 좌표
          schema:
            $ref: '#/components/schemas/latitude'
        - name: longitude
          in: query
          required: true
          description: 경도 좌표
          schema:
            $ref: '#/components/schemas/longitude'
        - name: page
          in: query
          required: true
          description: 페이지 번호
          schema:
            $ref: '#/components/schemas/page'
        - name: size
          in: query
          required: true
          description: 페이지 사이즈
          schema:
            $ref: '#/components/schemas/size'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: 리뷰
                  properties:
                    grade:
                      $ref: '#/components/schemas/grade'
                    registerTime:
                      $ref: '#/components/schemas/registerTime'
                    writer:
                      $ref: '#/components/schemas/writer'
                    content:
                      $ref: '#/components/schemas/content'
                    placeName:
                      $ref: '#/components/schemas/placeNam'
                    imageUrl:
                      type: array
                      items:
                        $ref: '#/components/schemas/imageUrl'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  '/v1/reviews/{reviewId}':
    get:
      summary: 리뷰 목록
      description: 80p 리뷰 상세
      parameters:
        - name: reviewId
          in: path
          required: true
          description: 리뷰 아이디
          schema:
            $ref: '#/components/schemas/reviewId'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                description: 리뷰
                properties:
                  grade:
                    $ref: '#/components/schemas/grade'
                  registerTime:
                    $ref: '#/components/schemas/registerTime'
                  writer:
                    $ref: '#/components/schemas/writer'
                  content:
                    $ref: '#/components/schemas/content'
                  placeName:
                    $ref: '#/components/schemas/placeNam'
                  imageUrls:
                    type: array
                    items:
                      $ref: '#/components/schemas/imageUrl'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/places/histories:
    get:
      summary: 최근 본 장소
      parameters:
        - name: page
          in: query
          required: true
          description: 페이지 번호
          schema:
            $ref: '#/components/schemas/page'
        - name: size
          in: query
          required: true
          description: 페이지 사이즈
          schema:
            $ref: '#/components/schemas/size'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    placeName:
                      $ref: '#/components/schemas/placeNam'
                    sido:
                      $ref: '#/components/schemas/sido'
                    sigungu:
                      $ref: '#/components/schemas/sigungu'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  '/v1/places/histories/{placeId}':
    delete:
      summary: 최근 본 장소 삭제
      description: 최근 본 장소 삭제
      security:
        - bearerAuth: []
      parameters:
        - name: placeId
          in: path
          required: true
          description: 리뷰 아이디
          schema:
            $ref: '#/components/schemas/placeId'
      responses:
        '200':
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/places/recommends:
    get:
      summary: 추천 장소 목록
      parameters:
        - name: businessGubun
          in: query
          required: true
          description: 장소 구분
          schema:
            $ref: '#/components/schemas/businessGubun'
        - name: zipcode
          in: query
          required: false
          description: '값이 null인 경우는 위도, 경도로 내 주변 검색'
          schema:
            $ref: '#/components/schemas/zipcode'
        - name: latitude
          in: query
          required: true
          description: 위도 좌표
          schema:
            $ref: '#/components/schemas/latitude'
        - name: longitude
          in: query
          required: true
          description: 경도 좌표
          schema:
            $ref: '#/components/schemas/longitude'
        - name: page
          in: query
          required: true
          description: 페이지 번호
          schema:
            $ref: '#/components/schemas/page'
        - name: size
          in: query
          required: true
          description: 페이지 사이즈
          schema:
            $ref: '#/components/schemas/size'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: 랭킹
                  properties:
                    placeId:
                      $ref: '#/components/schemas/placeId'
                    placeName:
                      $ref: '#/components/schemas/placeNam'
                    period:
                      $ref: '#/components/schemas/period'
                    ranking:
                      $ref: '#/components/schemas/ranking'
                    blogReviewCount:
                      $ref: '#/components/schemas/blogReviewCount'
                    visitorReviewCount:
                      $ref: '#/components/schemas/visitorReviewCount'
                    distance:
                      $ref: '#/components/schemas/distance'
                    openYn:
                      $ref: '#/components/schemas/openYn'
                    openTime:
                      $ref: '#/components/schemas/openTime'
                    imageUrls:
                      type: array
                      items:
                        $ref: '#/components/schemas/imageUrl'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/notices:
    get:
      summary: 공지
      description: 공지/소식
      parameters:
        - name: page
          in: query
          required: true
          description: 페이지 번호
          schema:
            $ref: '#/components/schemas/page'
        - name: size
          in: query
          required: true
          description: 페이지 사이즈
          schema:
            $ref: '#/components/schemas/size'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    noticeId:
                      $ref: '#/components/schemas/noticeId'
                    title:
                      $ref: '#/components/schemas/title'
                    registerTime:
                      $ref: '#/components/schemas/registerTime'
                    linkUrl:
                      $ref: '#/components/schemas/linkUrl'
                    imageUrl:
                      $ref: '#/components/schemas/imageUrl'
                    noticeGubun:
                      $ref: '#/components/schemas/noticeGubun'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    allDayOpenYn:
      type: string
      description: 24시간 개점 여부
      enum:
        - 'y'
        - 'n'
    allYearRoundYn:
      type: string
      description: 연중무휴 여부
      enum:
        - 'y'
        - 'n'
    blogReviewCount:
      type: integer
      description: 블로그 리뷰수
    businessGubun:
      type: string
      description: 장소 구분
      enum:
        - 병원
        - 약국
        - 미용
        - 용품
        - 산책
        - 카페
        - 호텔
    category:
      type: string
      description: 콘텐츠 카테고리
    commentCount:
      type: integer
      description: 댓글 수
    content:
      type: string
      description: 내용
    currentPoint:
      type: integer
      description: 현재 포인트
    distance:
      type: string
      description: 거리
      example: 1.2km
    email:
      type: string
      example: petme@petme.kr
      description: 이메일
    error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: 요청 정보가 올바르지 않습니다
          description: 에러 메세지
        cause:
          type: string
          description: 상세 메세지
    eventEndDate:
      type: string
      description: 이벤트 종료일
    eventId:
      type: integer
      description: 이벤트 아이디
    eventStartDate:
      type: string
      description: 이벤트 시작일
    grade:
      type: string
      description: 평점
      example: '9.5'
    hashtag:
      type: string
      description: 해시태크
    htmlYn:
      type: string
      description: html yn
      enum:
        - 'y'
        - 'n'
    imageUrl:
      type: string
      description: 장소 이미지 주소
    keyword:
      type: string
      description: 키워드
    latitude:
      type: number
      description: 위도 좌표
    linkUrl:
      type: string
      description: 링크 주소
    loginId:
      type: string
      example: petme@petme.kr
      description: 로그인 아이디(이메일 주소 또는 sns 사용자 아이디)
    loginType:
      type: string
      description: 로그인 타입
      enum:
        - kakao
        - google
        - apple
        - email
    longitude:
      type: number
      description: 경도 좌표
    newPassword:
      type: string
      example: '********'
      description: 패스워드
    noticeGubun:
      type: string
      description: 공지사항 타입
    noticeId:
      type: integer
      description: 공지 아이디
    openTime:
      type: string
      description: 영업 시작 시간
    openYn:
      type: string
      description: 영업 여부
    order:
      type: integer
      example: 1
      description: 정렬 순서
    otp:
      type: string
      example: '3454'
      description: otp
    page:
      type: integer
      description: 페이지 번호
      example: 1
    password:
      type: string
      example: '********'
      description: 비밀번호(사용자 비번 또는 sns 인증토큰)
    period:
      type: string
      description: 기간
      enum:
        - 일간
        - 주간
        - 월간
    phone:
      type: string
      example: '01033201234'
      description: 휴대폰 번호
    placeId:
      type: integer
      description: 장소 아이디
    placeNam:
      type: string
      description: 장소 이름
      example: 해뜨는 동물병원
    point:
      type: integer
      example: 2000
      description: 포인트
    pointGubun:
      type: string
      description: 포인트 타입
    pushOnOff:
      type: string
      description: 푸시 허용 여부
      enum:
        - 'on'
        - 'off'
    qnaId:
      type: integer
      description: Q&A 아이디
    raboratoryId:
      type: integer
      description: 팻연구소콘텐츠 아이디
    ranking:
      type: string
      description: 랭킹
    rankingOrder:
      type: string
      description: 랭킹 정렬순서
      enum:
        - 일간
        - 주간
        - 월간
        - 거리
        - 리뷰
    readCount:
      type: integer
      description: 조회수
    reason:
      type: string
      description: 사유
    registerTime:
      type: string
      description: 작성일
      example: 23.02.15
    requiredYn:
      type: string
      example: 'y'
      description: 필수 여부
    reviewCount:
      type: integer
      example: 10
      description: 리뷰수
    reviewId:
      type: integer
      description: 리뷰 아이디
    sido:
      type: string
      description: 시도
      example: 서울특별시
    sigungu:
      type: string
      description: 시군구
      example: 강남구
    size:
      type: integer
      description: 페이지 크기
      example: 4
    streetNameAddress:
      type: string
      description: 주소
    termsId:
      type: integer
      example: 3
      description: 약관 아이디
    title:
      type: string
      description: 제목
    token:
      type: string
      description: 인증 토큰
    totalReviewCount:
      type: integer
      description: 전체 리뷰수
    usedPoint:
      type: integer
      description: 이용 포인트
    userName:
      type: string
      example: 홍길동
      description: 사용자 명
    visitorReviewCount:
      type: integer
      description: 방문자 리뷰수
    watchCount:
      type: integer
      example: 5
      description: 찜갯수
    watchGubun:
      type: string
      description: 찜 구분
      example:
        - 장소
        - 콘텐츠
        - 연구소
    watchId:
      type: integer
      description: 찜 아이디
    weekendOpenYn:
      type: string
      description: 주말 개점 여부
      enum:
        - 'y'
        - 'n'
    withdrawalCause:
      type: string
      description: 탈퇴 사유
    writeTime:
      type: string
      description: 게시글 작성일
    writer:
      type: string
      description: 작성자
      example: 고양이가 최고야
    writerName:
      type: string
      description: 작성자 이름
    zipcode:
      type: string
      description: 우편 번호
      example: 06195
