openapi: 3.0.2
info:
  title: Petme3 API
  version: '0.1'
servers:
  - url: 'https://api.server.test/v1'
paths:
  /v1/login:
    post:
      summary: 로그인
      tags:
        - 로그인(9p)
      description: |
        12p 로그인 버튼 클릭시 호출.<br>
        sns 로그인의 경우 sns가 돌려준 사용자 식별자를 prefix + login_id, access_token을 password로 넘긴다.<br>
        예) login_id: kakao_2787125117, password: xjfRbePXz0jujIv9pQufV0YBFpGYpSl0xtYjVq-ZCj10aQAAAYgPJzRP
        ```
        -- 로그인
        SELECT id, login_id, user_name, email  
          FROM tb_user 
        WHERE login_id = 'petme@petme.kr' 
          AND password = SHA2('password', 256);

        -- 로그인 이력
        INSERT INTO tb_user_login_history(tb_user_id, login_id, login_time, login_ip, access_status)
        VALUES(39, 'petme@petme.kr', now(), NULL, '접속중');

        -- 디바이스 정보 수정
        UPDATE tb_device
          SET tb_user_id=39, login_id='petme@petme.kr', modify_time=now()
        WHERE uuid='941780cc-5a53-4455-9cf7-835ff2bbbe1a';
        ```
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - login_id
                - password
                - uuid
              properties:
                loginId:
                  $ref: '#/components/schemas/loginId'
                password:
                  $ref: '#/components/schemas/password'
                uuid:
                  $ref: '#/components/schemas/uuid'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                required:
                  - token
                properties:
                  token:
                    $ref: '#/components/schemas/token'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/emails/check:
    get:
      summary: 이메일 중복 확인
      tags:
        - 로그인(9p)
      description: |
        13p 중복확인 클릭시 호출<br>
        응답이 200이면 중복, 204인 경우 정상<br>
        ```
        SELECT COUNT(1)
          FROM tb_user
         WHERE email = 'petme@petme.kr';
        ```
      parameters:
        - name: email
          in: query
          description: 이메일
          required: true
          schema:
            $ref: '#/components/schemas/email'
      responses:
        '204':
          description: 정상
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/logout:
    post:
      summary: 로그아웃
      tags:
        - 마이-내정보수정(35p)
      description: |
        36p 로그아웃 링크 클릭시 호출.<br>
        서버에 로그아웃 이력을 추가하고 쿠키 또는 로컬 스토리지의 인증 토큰을 삭제한다.<br>
        ```
        -- 로그아웃 이력
        INSERT INTO tb_user_login_history(tb_user_id, login_id, login_time, login_ip, access_status)
        VALUES(39, 'petme@petme.kr', now(), NULL, '로그아웃');
        ```
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users:
    get:
      security:
        - bearerAuth: []
      summary: 내정보 조회
      tags:
        - 마이-메인(27p)
      description: |
        28p 내정보 조회<br>
        receive_information_yn 필드는 설정 > 알림 설정에 사용한다<br>
        ```
        SELECT 
          user_name, 
          email, 
          current_point, 
          receive_information_yn,
          (SELECT count(1) FROM tb_review WHERE tb_user_id = 39) AS review_count,
          (SELECT count(1) FROM tb_watchlist WHERE tb_user_id = 39) AS watch_count
        FROM tb_user
        WHERE id = 39;
        ```
      responses:
        '200':
          description: 정상
          content:
            application/json:
              schema:
                type: object
                required:
                  - user_name
                  - email
                  - review_count
                  - current_point
                  - watch_count
                  - receive_information_yn
                properties:
                  user_name:
                    $ref: '#/components/schemas/userName'
                  email:
                    $ref: '#/components/schemas/email'
                  review_count:
                    $ref: '#/components/schemas/reviewCount'
                  current_point:
                    $ref: '#/components/schemas/currentPoint'
                  watch_count:
                    $ref: '#/components/schemas/watchCount'
                  receive_information_yn:
                    $ref: '#/components/schemas/receiveInformationYn'
    post:
      summary: 회원 가입
      tags:
        - 로그인(9p)
      description: |
        13p 회원 가입 요청<br>
        sns 로그인을 통한 회원 가입은 어떻게 처리할 것인가?<br>
        ```
          -- otp 검증
          SELECT otp
            FROM tb_otp
           WHERE phone = '01012341234'
             AND otp = '123456'
             AND expiration_time > NOW();
          -- 회원가입
          INSERT INTO tb_user (login_id, email, password, phone, receive_information_yn)
          VALUES ('test1@test.com', 'test1@test.com', SHA2('password', 256), '01012341234', 'y');
        ```
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - login_id
                - password
                - phone
                - otp
                - receive_information_yn
              properties:
                login_id:
                  $ref: '#/components/schemas/loginId'
                password:
                  $ref: '#/components/schemas/password'
                phone:
                  $ref: '#/components/schemas/phone'
                otp:
                  $ref: '#/components/schemas/otp'
                receive_information_yn:
                  $ref: '#/components/schemas/receiveInformationYn'
      responses:
        '201':
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/opts:
    post:
      summary: 인증번호 전송
      tags:
        - 이메일주소 찾기/비밀번호 찾기(14p)
      description: |
        휴대폰 인증을 위해 sms로 otp를 발송<br>
        ```
          INSERT INTO tb_otp(phone, otp, register_time)
          VALUES ('01012341234', '123456', NOW());
        ```
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  $ref: '#/components/schemas/phone'
              required:
                - phone
      responses:
        '201':
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/emails:
    get:
      summary: 이메일주소 찾기
      tags:
        - 이메일주소 찾기/비밀번호 찾기(14p)
      description: |
        기획서 15p 이메일주소 찾기 클릭시
        ```
          -- otp 검증
          SELECT otp
            FROM tb_otp
           WHERE phone = '01012341234'
             AND otp = '123456'
             AND expiration_time > NOW();
          -- email 조회
          SELECT email 
            FROM tb_user 
           WHERE phone = '01012341234';
        ```
      parameters:
        - name: phone
          in: query
          description: 휴대폰
          required: true
          schema:
            $ref: '#/components/schemas/phone'
        - name: otp
          in: query
          description: otp
          required: true
          schema:
            $ref: '#/components/schemas/otp'
      responses:
        '200':
          description: 이메일
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    $ref: '#/components/schemas/email'
                required:
                  - email
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/passwords:
    get:
      summary: 비밀번호 찾기
      tags:
        - 이메일주소 찾기/비밀번호 찾기(14p)
      description: |
        17p 비밀번호 찾기 클릭
        ```
          -- otp 검증
          SELECT otp
            FROM tb_otp
            WHERE phone = '01012341234'
              AND otp = '123456'
              AND expiration_time > NOW();
        ```
      parameters:
        - name: phone
          in: query
          description: 휴대폰
          required: true
          schema:
            $ref: '#/components/schemas/phone'
        - name: otp
          in: query
          description: otp
          required: true
          schema:
            $ref: '#/components/schemas/otp'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    $ref: '#/components/schemas/code'
                required:
                  - code
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    put:
      tags:
        - 이메일주소 찾기/비밀번호 찾기(14p)
      summary: 비밀번호 재설정
      description: |
        18p 확인 버튼 클릭<br>
        17p 요청값인 phone과 응답으로 받은 code, password를 요청으로 전송한다.
        ```
          -- code 검증
          SELECT otp
            FROM tb_otp
            WHERE phone = '01012341234'
              AND otp = '123456'
              AND expiration_time > NOW();
          -- password 재설정
          UPDATE tb_user
             SET password = SHA2('password', 256)
          WHERE phone = '01012341234';
        ```
        ## 시퀀스 다이어그램
        ![diagram](http://101.101.208.77/images/find-password.png)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  $ref: '#/components/schemas/phone'
                code:
                  $ref: '#/components/schemas/code'
                password:
                  $ref: '#/components/schemas/password'
              required:
                - phone
                - otp
                - password
      responses:
        '200':
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/name:
    put:
      tags:
        - 마이-내정보수정(35p)
      summary: 내정보 수정-이름
      description: |
        37p 닉네임 수정
        ```
          UPDATE tb_user
             SET user_name = '아소카'
           WHERE id = 39;
        ```
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_name:
                  $ref: '#/components/schemas/userName'
              required:
                - userName
      responses:
        '200':
          description: Ok
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/password:
    put:
      tags:
        - 마이-내정보수정(35p)
      summary: 내정보 수정-비밀번호 수정
      description: |
        38p 비밀번호 변경
        ```
          UPDATE tb_user
            SET password = SHA2('new-password', 256)
          WHERE id = 39
            AND password = SHA2('password', 256);
        ```
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  $ref: '#/components/schemas/password'
                new_password:
                  $ref: '#/components/schemas/newPassword'
              required:
                - password
                - new_password
      responses:
        '200':
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/phone:
    put:
      tags:
        - 마이-내정보수정(35p)
      summary: 휴대폰번호 변경
      description: |
        39p 내정보 수정-휴대폰번호
        ```
        -- code 검증
          SELECT otp
            FROM tb_otp
            WHERE phone = '01012341234'
              AND otp = '123456'
              AND expiration_time > NOW();
              
        -- 휴대폰번호 갱신
        UPDATE tb_user
           SET phone = '01012341234'
         WHERE id = 10;
        ```
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  $ref: '#/components/schemas/phone'
                otp:
                  $ref: '#/components/schemas/otp'
              required:
                - phone
                - otp
      responses:
        '200':
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/notification:
    put:
      tags:
        - 마이-설정(31p)
      summary: 내정보 설정
      description: |
        32p 내정보 수정-알림
        ```
        -- 알림 수정
        UPDATE tb_user
           SET receive_information_yn = 'n'
         WHERE id = 10;
        ```
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                receive_information_yn:
                  $ref: '#/components/schemas/receiveInformationYn'
              required:
                - phone
                - otp
      responses:
        '200':
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/withdrawal:
    post:
      tags:
        - 마이-내정보수정(35p)
      summary: 회원 탈퇴
      description: |
        41p 회원 탈퇴<br>
        회원 탈퇴 처리 후 로그아웃 처리한다<br>
        ```
        UPDATE tb_user 
           SET use_yn = 'n',
               withdrawal_date = now(),
               withdrawal_cause = '리뷰가 도움이 되지 않아서',
               receive_information_yn = 'n',
               modify_time = now()
         WHERE id = 39;
        ```
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  $ref: '#/components/schemas/withdrawalCause'
      responses:
        '200':
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/reviews:
    get:
      tags:
        - 마이-리뷰(43p)
      summary: 내 리뷰 목록
      description: 44p 마이-리뷰
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: true
          description: 페이지 번호
          schema:
            $ref: '#/components/schemas/page'
        - name: size
          in: query
          required: true
          description: 페이지 사이즈
          schema:
            $ref: '#/components/schemas/size'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    review_id:
                      $ref: '#/components/schemas/reviewId'
                    grade:
                      $ref: '#/components/schemas/grade'
                    place_name:
                      $ref: '#/components/schemas/placeNam'
                    register_time:
                      $ref: '#/components/schemas/registerTime'
                    keyword:
                      $ref: '#/components/schemas/keyword'
                    content:
                      $ref: '#/components/schemas/content'
                    image_urls:
                      type: array
                      items:
                        $ref: '#/components/schemas/imageUrl'
                  required:
                    - review_id
                    - grade
                    - place_name
                    - register_time
                    - keyword
                    - content
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  '/v1/users/reviews/{review_id}':
    delete:
      tags:
        - 마이-리뷰(43p)
      summary: 리뷰 삭제
      description: 44p 마이-리뷰 삭제
      security:
        - bearerAuth: []
      parameters:
        - name: review_id
          in: path
          required: true
          description: 리뷰 아이디
          schema:
            $ref: '#/components/schemas/reviewId'
      responses:
        '200':
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/points:
    get:
      tags:
        - 마이-포인트(46p)
      summary: 포인트 사용 내역
      description: 47p 마이-포인트
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                required:
                  - current_point
                  - point_histories
                properties:
                  currentPoint:
                    $ref: '#/components/schemas/currentPoint'
                  pointHistories:
                    type: array
                    items:
                      type: object
                      properties:
                        pointGubun:
                          $ref: '#/components/schemas/pointGubun'
                        usedPoint:
                          $ref: '#/components/schemas/usedPoint'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/watches/places:
    get:
      tags:
        - 마이-찜(50p)
      summary: 마이찜-장소
      description: 52p 마이-찜-장소
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: true
          description: 페이지 번호
          schema:
            $ref: '#/components/schemas/page'
        - name: size
          in: query
          required: true
          description: 페이지 사이즈
          schema:
            $ref: '#/components/schemas/size'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    place_id:
                      $ref: '#/components/schemas/placeId'
                    place_name:
                      $ref: '#/components/schemas/placeNam'
                    period:
                      $ref: '#/components/schemas/period'
                    ranking:
                      $ref: '#/components/schemas/ranking'
                    blog_review_count:
                      $ref: '#/components/schemas/blogReviewCount'
                    visitor_review_count:
                      $ref: '#/components/schemas/visitorReviewCount'
                    distance:
                      $ref: '#/components/schemas/distance'
                    openYn:
                      $ref: '#/components/schemas/openYn'
                    openTime:
                      $ref: '#/components/schemas/openTime'
                    image_urls:
                      type: array
                      items:
                        $ref: '#/components/schemas/imageUrl'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/watches/contents:
    get:
      tags:
        - 마이-찜(50p)
      summary: 마이찜-콘텐츠
      description: 52p 마이-찜-콘텐츠
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: true
          description: 페이지 번호
          schema:
            $ref: '#/components/schemas/page'
        - name: size
          in: query
          required: true
          description: 페이지 사이즈
          schema:
            $ref: '#/components/schemas/size'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    raboratory_id:
                      $ref: '#/components/schemas/raboratoryId'
                    category:
                      $ref: '#/components/schemas/category'
                    title:
                      $ref: '#/components/schemas/title'
                    hashtag:
                      $ref: '#/components/schemas/hashtag'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/watches/qnas:
    get:
      tags:
        - 마이-찜(50p)
      summary: 마이찜-Q&A
      description: 52p 마이-찜-펫 연구소 Q&A
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: true
          description: 페이지 번호
          schema:
            $ref: '#/components/schemas/page'
        - name: size
          in: query
          required: true
          description: 페이지 사이즈
          schema:
            $ref: '#/components/schemas/size'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    qna_id:
                      $ref: '#/components/schemas/qnaId'
                    category:
                      $ref: '#/components/schemas/category'
                    title:
                      $ref: '#/components/schemas/title'
                    writer:
                      $ref: '#/components/schemas/writer'
                    writer_name:
                      $ref: '#/components/schemas/writerName'
                    read_count:
                      $ref: '#/components/schemas/readCount'
                    register_time:
                      $ref: '#/components/schemas/registerTime'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  '/v1/users/watches/{watch_id}':
    delete:
      tags:
        - 마이-찜(50p)
      summary: 찜 삭제
      description: 52p 마이-찜-삭제
      security:
        - bearerAuth: []
      parameters:
        - name: watch_id
          in: path
          required: true
          description: 찜 아이디
          schema:
            $ref: '#/components/schemas/watchId'
      responses:
        '200':
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/qnas:
    get:
      tags:
        - 펫연구소 작성글/댓글(53p)
      summary: 펫 연구소 Q&A 작성글
      description: 55p 마이-펫 연구소 작성글
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: true
          description: 페이지 번호
          schema:
            $ref: '#/components/schemas/page'
        - name: size
          in: query
          required: true
          description: 페이지 사이즈
          schema:
            $ref: '#/components/schemas/size'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - category
                    - title
                    - writer
                    - write_time
                    - comment_count
                    - image_url
                  properties:
                    category:
                      $ref: '#/components/schemas/category'
                    title:
                      $ref: '#/components/schemas/title'
                    writer:
                      $ref: '#/components/schemas/writer'
                    write_time:
                      $ref: '#/components/schemas/writeTime'
                    comment_count:
                      type: integer
                      description: 댓글 수
                    image_url:
                      $ref: '#/components/schemas/imageUrl'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/qnas/comments:
    get:
      tags:
        - 펫연구소 작성글/댓글(53p)
      summary: 펫 연구소 Q&A 댓글
      description: 55p 마이-펫연구소 작성 댓글
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: true
          description: 페이지 번호
          schema:
            $ref: '#/components/schemas/page'
        - name: size
          in: query
          required: true
          description: 페이지 사이즈
          schema:
            $ref: '#/components/schemas/size'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - title
                    - content
                    - write_time
                    - image_url
                  properties:
                    title:
                      $ref: '#/components/schemas/title'
                    content:
                      $ref: '#/components/schemas/content'
                    write_time:
                      $ref: '#/components/schemas/writeTime'
                    image_url:
                      $ref: '#/components/schemas/imageUrl'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/news:
    get:
      tags:
        - 마이-이벤트/공지사항(56p)
      summary: 마이-이벤트/공지사항
      description: |
        57p 마이-이벤트/공지사항<br> 응답 필드 미정
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: true
          description: 페이지 번호
          schema:
            $ref: '#/components/schemas/page'
        - name: size
          in: query
          required: true
          description: 페이지 사이즈
          schema:
            $ref: '#/components/schemas/size'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    eventId:
                      $ref: '#/components/schemas/eventId'
                    title:
                      $ref: '#/components/schemas/title'
                    register_time:
                      $ref: '#/components/schemas/registerTime'
                    image_url:
                      $ref: '#/components/schemas/imageUrl'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  '/v1/events/{event_id}':
    get:
      tags:
        - 마이-이벤트/공지사항(56p)
      summary: 이벤트 상세
      description: 58p 이벤트 상세
      security:
        - bearerAuth: []
      parameters:
        - name: event_id
          in: path
          required: true
          description: 이벤트 아이디
          schema:
            $ref: '#/components/schemas/eventId'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                required:
                  - title
                  - content
                  - event_start_date
                  - event_end_date
                  - image_url
                properties:
                  title:
                    $ref: '#/components/schemas/title'
                  content:
                    $ref: '#/components/schemas/content'
                  event_start_date:
                    $ref: '#/components/schemas/eventStartDate'
                  event_end_date:
                    $ref: '#/components/schemas/eventEndDate'
                  image_url:
                    $ref: '#/components/schemas/imageUrl'
                  link_url:
                    $ref: '#/components/schemas/linkUrl'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  '/v1/notices/{notice_id}':
    get:
      tags:
        - 마이-이벤트/공지사항(56p)
      summary: 공지
      description: 59p 공지 상세
      security:
        - bearerAuth: []
      parameters:
        - name: notice_id
          in: path
          required: true
          description: 공지사항 아이디
          schema:
            $ref: '#/components/schemas/noticeId'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    $ref: '#/components/schemas/title'
                  writer:
                    $ref: '#/components/schemas/writer'
                  writer_name:
                    $ref: '#/components/schemas/writerName'
                  content:
                    $ref: '#/components/schemas/content'
                  html_yn:
                    $ref: '#/components/schemas/htmlYn'
                  read_count:
                    $ref: '#/components/schemas/readCount'
                  register_time:
                    $ref: '#/components/schemas/registerTime'
                  link_url:
                    $ref: '#/components/schemas/linkUrl'
                  image_urls:
                    $ref: '#/components/schemas/imageUrl'
                  notice_gubun:
                    $ref: '#/components/schemas/noticeGubun'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/reviews/count:
    get:
      tags:
        - 통합메인(61p)
      summary: 누적 리뷰수
      description: 메인 - 누적 리뷰수
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_review_count
                properties:
                  total_review_count:
                    $ref: '#/components/schemas/totalReviewCount'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/rankings/categories:
    get:
      tags:
        - 통합메인(61p)
      summary: 랭킹 카테고리 목록
      description: |
        62p 메인-랭킹 카테고리
        ```
        select business_gubun
          from tb_place
        group by business_gubun;
        ```
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: 랭킹
                  properties:
                    title:
                      $ref: '#/components/schemas/title'
                    image_url:
                      $ref: '#/components/schemas/imageUrl'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/rankings:
    get:
      tags:
        - 통합메인(61p)
      summary: 메인-랭킹 목록
      description: |
        62p 메인-내주변 랭킹
        ```
          SELECT 
            (@rownum := @rownum + 1) AS number, 
            COUNT(*) OVER() AS total_count, 
            X.place_id,
            X.ranking, 
            X.total_review_count, 
            X.distance,
            X.place_name, 
            X.image_url 
          FROM
          (
            SELECT       
                a.id AS place_id,
                (TRIM(a.ranking) + 0) AS ranking,
                (IFNULL(a.blog_review_count, 0) + IFNULL(a.visitor_review_count, 0)) AS total_review_count,
                @rest_meter := ROUND(ST_Distance_Sphere(POINT(a.longitude, a.latitude), POINT(@input_longitude, @input_latitude))) '',
                IF (@rest_meter > 1000, CONCAT(CONVERT(ROUND(@rest_meter/1000, 1), CHAR), 'km'), CONCAT(CONVERT(@rest_meter, CHAR), 'm')) AS distance,
                TRIM(a.NAME) AS place_name, 
                if (a.id NOT IN(SELECT bb.id FROM tb_file aa, tb_place bb WHERE bb.id = aa.tb_place_id), '',
                  (SELECT 
                      CONCAT('http://', (SELECT z.ip1 FROM tb_server z, tb_file y WHERE z.id = y.tb_server_id AND y.tb_place_id = a.id), full_path, '/', save_name) 
                  FROM tb_file WHERE tb_place_id = a.id)) AS image_url
            FROM 
                tb_place AS a,
                (SELECT @rownum := 0) AS b,
                (SELECT @rest_meter := 0) AS c,
                (SELECT @input_longitude := 127.027528) AS d,
                (SELECT @input_latitude := 37.497637) AS e
            WHERE 
                -- (a.business_gubun = '동물병원' AND a.street_name_address like '서울 강남구%') OR 
                ST_Distance_Sphere(POINT(a.longitude, a.latitude), POINT(@input_longitude, @input_latitude)) <= 2000
            ORDER BY ranking DESC
          ) X LIMIT 4 OFFSET 0;
        ```
      parameters:
        - name: business_gubun
          in: query
          required: true
          description: 장소 구분
          schema:
            $ref: '#/components/schemas/businessGubun'
        - name: sido
          in: query
          required: true
          description: 시도
          schema:
            $ref: '#/components/schemas/sido'
        - name: sigungu
          in: query
          required: true
          description: 시군구
          schema:
            $ref: '#/components/schemas/sigungu'
        - name: latitude
          in: query
          required: true
          description: 위도 좌표
          schema:
            $ref: '#/components/schemas/latitude'
        - name: longitude
          in: query
          required: true
          description: 경도 좌표
          schema:
            $ref: '#/components/schemas/longitude'
        - name: page
          in: query
          required: true
          description: 페이지 번호(0부터 시작)
          schema:
            $ref: '#/components/schemas/page'
        - name: size
          in: query
          required: true
          description: 페이지 사이즈
          schema:
            $ref: '#/components/schemas/size'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: 랭킹
                  properties:
                    total_count:
                      $ref: '#/components/schemas/totalCount'
                    place_id:
                      $ref: '#/components/schemas/placeId'
                    place_name:
                      $ref: '#/components/schemas/placeNam'
                    ranking:
                      $ref: '#/components/schemas/ranking'
                    total_review_count:
                      $ref: '#/components/schemas/totalReviewCount'
                    distance:
                      $ref: '#/components/schemas/distance'
                    image_url:
                      $ref: '#/components/schemas/imageUrl'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v2/rankings:
    get:
      tags:
        - 랭킹(70p)
      summary: 랭킹 목록(작성중)
      description: |
        71p 랭킹-목록
        ```
        ```
      parameters:
        - name: business_gubun
          in: query
          required: true
          description: 장소 구분
          schema:
            $ref: '#/components/schemas/businessGubun'
        - name: sido
          in: query
          required: true
          description: 시도
          schema:
            $ref: '#/components/schemas/sido'
        - name: sigungu
          in: query
          required: true
          description: 시군구
          schema:
            $ref: '#/components/schemas/sigungu'
        - name: ranking_order
          in: query
          required: true
          description: 정렬 기준
          schema:
            $ref: '#/components/schemas/rankingOrder'
        - name: weekend_open_yn
          in: query
          required: true
          description: 주말 진료 여부
          schema:
            $ref: '#/components/schemas/weekendOpenYn'
        - name: all_day_open_yn
          in: query
          required: true
          description: 24시간 진료 여부
          schema:
            $ref: '#/components/schemas/allDayOpenYn'
        - name: open_yn
          in: query
          required: true
          description: 오픈 여부
          schema:
            $ref: '#/components/schemas/openYn'
        - name: latitude
          in: query
          required: true
          description: 위도 좌표
          schema:
            $ref: '#/components/schemas/latitude'
        - name: longitude
          in: query
          required: true
          description: 경도 좌표
          schema:
            $ref: '#/components/schemas/longitude'
        - name: page
          in: query
          required: true
          description: 페이지 번호
          schema:
            $ref: '#/components/schemas/page'
        - name: size
          in: query
          required: true
          description: 페이지 사이즈
          schema:
            $ref: '#/components/schemas/size'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: 랭킹
                  properties:
                    place_id:
                      $ref: '#/components/schemas/placeId'
                    place_name:
                      $ref: '#/components/schemas/placeNam'
                    ranking:
                      $ref: '#/components/schemas/ranking'
                    total_review_count:
                      $ref: '#/components/schemas/totalReviewCount'
                    distance:
                      $ref: '#/components/schemas/distance'
                    all_year_round_yn:
                      $ref: '#/components/schemas/allYearRoundYn'
                    street_name_address:
                      $ref: '#/components/schemas/streetNameAddress'
                    open_status:
                      $ref: '#/components/schemas/openStatus'
                    open_time:
                      $ref: '#/components/schemas/openTime'
                    image_url:
                      $ref: '#/components/schemas/imageUrl'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/reviews:
    get:
      tags:
        - 통합메인(61p)
      summary: 메인-베스트 리뷰 목록
      description: "62p 베스트 리뷰\n```\n  SELECT\n      X.place_id,\n      X.ranking,\n      X.writer,\n      X.register_time,\n      X.place_name,\n      X.content,\n      X.image_url\n  FROM\n  (\n    SELECT       \n        a.id AS place_id,\n        a.ranking,\n        b.writer,\n        b.register_time,\n        b.content,\n        TRIM(a.NAME) AS place_name, \n        if (a.id NOT IN(SELECT bb.id FROM tb_file aa, tb_place bb WHERE bb.id = aa.tb_place_id), '',\n          (SELECT \n              CONCAT('http://', (SELECT z.ip1 FROM tb_server z, tb_file y WHERE z.id = y.tb_server_id AND y.tb_place_id = a.id), full_path, '/', save_name) \n          FROM tb_file WHERE tb_place_id = a.id)) AS image_url\n    FROM \n        tb_place AS a,\n        tb_review AS b,\n        (SELECT @rest_meter := 0) AS c,\n        (SELECT @input_longitude := 127.027528) AS d,\n        (SELECT @input_latitude := 37.497637) AS e\n    WHERE \n        -- (a.business_gubun = '동물병원' AND a.street_name_address like '서울 강남구%') AND\n        ST_Distance_Sphere(POINT(a.longitude, a.latitude), POINT(@input_longitude, @input_latitude)) <= 2000\t\n        AND a.id = b.tb_place_id\n    ORDER BY a.blog_review_count DESC\n  ) X LIMIT 4 OFFSET 0;\n```\n"
      parameters:
        - name: business_gubun
          in: query
          required: true
          description: 장소 구분
          schema:
            $ref: '#/components/schemas/businessGubun'
        - name: sido
          in: query
          required: true
          description: 시도
          schema:
            $ref: '#/components/schemas/sido'
        - name: sigungu
          in: query
          required: true
          description: 시군구
          schema:
            $ref: '#/components/schemas/sigungu'
        - name: page
          in: query
          required: true
          description: 페이지 번호(0부터 시작)
          schema:
            $ref: '#/components/schemas/page'
        - name: size
          in: query
          required: true
          description: 페이지 사이즈
          schema:
            $ref: '#/components/schemas/size'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: 리뷰
                  properties:
                    ranking:
                      $ref: '#/components/schemas/ranking'
                    register_time:
                      $ref: '#/components/schemas/registerTime'
                    writer:
                      $ref: '#/components/schemas/writer'
                    content:
                      $ref: '#/components/schemas/content'
                    place_name:
                      $ref: '#/components/schemas/placeNam'
                    image_url:
                      $ref: '#/components/schemas/imageUrl'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v2/reviews:
    get:
      tags:
        - 리뷰-메인(79p)
      summary: 리뷰 목록(작성중)
      description: |
        80p 리뷰 목록
        ```
        ```
      parameters:
        - name: business_gubun
          in: query
          required: true
          description: 장소 구분
          schema:
            $ref: '#/components/schemas/businessGubun'
        - name: sido
          in: query
          required: true
          description: 시도
          schema:
            $ref: '#/components/schemas/sido'
        - name: sigungu
          in: query
          required: true
          description: 시군구
          schema:
            $ref: '#/components/schemas/sigungu'
        - name: page
          in: query
          required: true
          description: 페이지 번호(0부터 시작)
          schema:
            $ref: '#/components/schemas/page'
        - name: size
          in: query
          required: true
          description: 페이지 사이즈
          schema:
            $ref: '#/components/schemas/size'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: 리뷰
                  properties:
                    grade:
                      $ref: '#/components/schemas/grade'
                    register_time:
                      $ref: '#/components/schemas/registerTime'
                    writer:
                      $ref: '#/components/schemas/writer'
                    content:
                      $ref: '#/components/schemas/content'
                    place_name:
                      $ref: '#/components/schemas/placeNam'
                    image_urls:
                      type: array
                      items:
                        $ref: '#/components/schemas/imageUrl'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/recommends:
    get:
      tags:
        - 통합메인(61p)
      summary: 추천 목록
      description: |
        62p 메인-추천 목록
        ```
          SELECT
              X.place_id,
              X.ranking,
              X.total_review_count,
              X.distance,
              X.place_name,
              X.sido,
              X.image_url
          FROM
          (
            SELECT       
                a.id AS place_id,
                SUBSTRING_INDEX(a.street_name_address, ' ', 2) AS sido,
                (TRIM(a.ranking) + 0) AS ranking,
                (IFNULL(a.blog_review_count, 0) + IFNULL(a.visitor_review_count, 0)) AS total_review_count,
                @rest_meter := ROUND(ST_Distance_Sphere(POINT(a.longitude, a.latitude), POINT(@input_longitude, @input_latitude))) AS rest_meter,
                IF (@rest_meter > 1000, CONCAT(CONVERT(ROUND(@rest_meter/1000, 1), CHAR), 'km'), CONCAT(CONVERT(@rest_meter, CHAR), 'm')) AS distance,
                TRIM(a.NAME) AS place_name, 
                if (a.id NOT IN(SELECT bb.id FROM tb_file aa, tb_place bb WHERE bb.id = aa.tb_place_id), '',
                  (SELECT 
                      CONCAT('http://', (SELECT z.ip1 FROM tb_server z, tb_file y WHERE z.id = y.tb_server_id AND y.tb_place_id = a.id), full_path, '/', save_name) 
                  FROM tb_file WHERE tb_place_id = a.id)) AS image_url
            FROM 
                tb_place AS a,
                (SELECT @rownum := 0) AS b,
                (SELECT @rest_meter := 0) AS c,
                (SELECT @input_longitude := 127.027528) AS d,
                (SELECT @input_latitude := 37.497637) AS e
            WHERE 
                -- (a.business_gubun = '동물병원' AND a.street_name_address like '서울 강남구%') OR 
                ST_Distance_Sphere(POINT(a.longitude, a.latitude), POINT(@input_longitude, @input_latitude)) <= 2000
            ORDER BY rest_meter ASC, ranking DESC
          ) X LIMIT 4 OFFSET 0;
        ```
      parameters:
        - name: business_gubun
          in: query
          required: true
          description: 장소 구분
          schema:
            $ref: '#/components/schemas/businessGubun'
        - name: sido
          in: query
          required: true
          description: 시도
          schema:
            $ref: '#/components/schemas/sido'
        - name: sigungu
          in: query
          required: true
          description: 시군구
          schema:
            $ref: '#/components/schemas/sigungu'
        - name: latitude
          in: query
          required: true
          description: 위도 좌표
          schema:
            $ref: '#/components/schemas/latitude'
        - name: longitude
          in: query
          required: true
          description: 경도 좌표
          schema:
            $ref: '#/components/schemas/longitude'
        - name: page
          in: query
          required: true
          description: 페이지 번호(0부터 시작)
          schema:
            $ref: '#/components/schemas/page'
        - name: size
          in: query
          required: true
          description: 페이지 사이즈
          schema:
            $ref: '#/components/schemas/size'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: 랭킹
                  properties:
                    place_id:
                      $ref: '#/components/schemas/placeId'
                    ranking:
                      $ref: '#/components/schemas/ranking'
                    total_review_count:
                      $ref: '#/components/schemas/totalReviewCount'
                    place_name:
                      $ref: '#/components/schemas/placeNam'
                    sido:
                      $ref: '#/components/schemas/sido'
                    distance:
                      $ref: '#/components/schemas/distance'
                    image_url:
                      $ref: '#/components/schemas/imageUrl'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/pet-contents:
    get:
      tags:
        - 통합메인(61p)
      summary: 펫 연구소 콘텐트 목록
      description: |
        62p 메인-팻 연구소 콘텐츠 목록
        ```
          SELECT 
            a.id AS content_id, 
            a.category,
            a.title,
            a.hashtag,
            CONCAT('http://', b.ip1, c.full_path, '/', c.save_name) AS image_url
            FROM tb_pet_raboratory a, tb_server b, tb_file c
          WHERE c.tb_pet_raboratory_id = a.id
          ORDER BY a.register_time DESC
          LIMIT 0, 4; -- page, size
        ```
      parameters:
        - name: page
          in: query
          required: true
          description: 페이지 번호(0부터 시작)
          schema:
            $ref: '#/components/schemas/page'
        - name: size
          in: query
          required: true
          description: 페이지 사이즈
          schema:
            $ref: '#/components/schemas/size'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: 랭킹
                  properties:
                    content_id:
                      $ref: '#/components/schemas/contentId'
                    category:
                      $ref: '#/components/schemas/category'
                    title:
                      $ref: '#/components/schemas/title'
                    hashtag:
                      $ref: '#/components/schemas/hashtag'
                    image_url:
                      $ref: '#/components/schemas/imageUrl'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  '/v1/places/{place_id}':
    get:
      tags:
        - 장소상세-홈(90p)
      summary: 장소상세(작성중)
      description: |
        91p 장소상세-홈
        ```
        ```
      parameters:
        - name: place_id
          in: path
          required: true
          description: 장소 아이디
          schema:
            $ref: '#/components/schemas/placeId'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: 랭킹
                  properties:
                    place_id:
                      $ref: '#/components/schemas/placeId'
                    place_name:
                      $ref: '#/components/schemas/placeNam'
                    ranking:
                      $ref: '#/components/schemas/ranking'
                    daily_ranking:
                      $ref: '#/components/schemas/dailyRanking'
                    weekly_ranking:
                      $ref: '#/components/schemas/weelkyRanking'
                    monthly_ranking:
                      $ref: '#/components/schemas/monthlyRanking'
                    blog_review_count:
                      $ref: '#/components/schemas/blogReviewCount'
                    visitor_review_count:
                      $ref: '#/components/schemas/visitorReviewCount'
                    street_name_address:
                      $ref: '#/components/schemas/streetNameAddress'
                    lot_number_address:
                      $ref: '#/components/schemas/lotNumberAddress'
                    way_to_come1:
                      $ref: '#/components/schemas/wayToCome1'
                    way_to_come2:
                      $ref: '#/components/schemas/wayToCome2'
                    zipcode:
                      $ref: '#/components/schemas/zipcode'
                    distance:
                      $ref: '#/components/schemas/category'
                    total_review_count:
                      $ref: '#/components/schemas/totalReviewCount'
                    phone:
                      $ref: '#/components/schemas/phone'
                    payment_method:
                      $ref: '#/components/schemas/paymentMethod'
                    content:
                      $ref: '#/components/schemas/content'
                    information_use:
                      $ref: '#/components/schemas/instagramUrl'
                    homepage_url:
                      $ref: '#/components/schemas/homepageUrl'
                    blog_url:
                      $ref: '#/components/schemas/blogUrl'
                    instagram_url:
                      type: string
                      description: 인스타그램 주소
                    facebook_url:
                      $ref: '#/components/schemas/facebookUrl'
                    youtube_url:
                      $ref: '#/components/schemas/youtubeUrl'
                    business_gubun:
                      $ref: '#/components/schemas/businessGubun'
                    business_hour:
                      $ref: '#/components/schemas/businessHour'
                    hashtag:
                      $ref: '#/components/schemas/hashtag'
                    latitude:
                      $ref: '#/components/schemas/latitude'
                    longitude:
                      $ref: '#/components/schemas/longitude'
                    place_summary:
                      $ref: '#/components/schemas/placeSummary'
                    image_url:
                      $ref: '#/components/schemas/imageUrl'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/devices:
    post:
      tags:
        - 기타
      summary: 디바이스 추가
      description: |
        앱 실행 후 uuid를 통해 디바이스 정보를 추가한다. ip, mac_address는 저장할 필요가 없다고 판단한다.<br>
        uuid가 이미 존재하면 modify_time을 수정한다.<br>
        사용자가 로그인을 수행하면 tb_user_id, modify_time을 수정한다.<br>
        <a href='https://developer.android.com/training/articles/user-data-ids?hl=ko' target='_blank'>안드로이드 uuid 정책</a><br>
        <a href='https://www.hooni.net/xe/study/2273' target='_blank'>ios uuid 정책</a><br>
        ```
        INSERT INTO tb_device(`uuid`, os, ip, mac_address, modify_time, register_time)
        VALUES('941780cc-5a53-4455-9cf7-835ff2bbbe1a', 'Android 4.4.2', NULL, NULL, now(), now());
        ```
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  $ref: '#/components/schemas/uuid'
                os:
                  $ref: '#/components/schemas/os'
      responses:
        '200':
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    allDayOpenYn:
      type: string
      description: 24시간 개점 여부
      enum:
        - 'y'
        - 'n'
    allYearRoundYn:
      type: string
      description: 연중무휴 여부
      enum:
        - 'y'
        - 'n'
    blogReviewCount:
      type: integer
      description: 블로그 리뷰수
    blogUrl:
      type: string
      description: 블라그 주소
    businessGubun:
      type: string
      description: 장소 구분
      enum:
        - 병원
        - 약국
        - 미용
        - 용품
        - 산책
        - 카페
        - 호텔
    businessHour:
      type: string
      description: 운영시간
    category:
      type: string
      description: 콘텐츠 카테고리
    code:
      type: string
      description: 확인 코드
    commentCount:
      type: integer
      description: 댓글 수
    content:
      type: string
      description: 내용
    contentId:
      type: integer
      description: 콘텐츠 아이디
    currentPoint:
      type: integer
      description: 현재 포인트
    dailyRanking:
      type: integer
      description: 일간 랭킹
    distance:
      type: string
      description: 거리
      example: 1.2km
    email:
      type: string
      example: petme@petme.kr
      description: 이메일
    error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: 요청 정보가 올바르지 않습니다
          description: 에러 메세지
        cause:
          type: string
          description: 상세 메세지
    eventEndDate:
      type: string
      description: 이벤트 종료일
    eventId:
      type: integer
      description: 이벤트 아이디
    eventStartDate:
      type: string
      description: 이벤트 시작일
    facebookUrl:
      type: string
      description: 페이스북 주소
    grade:
      type: string
      description: 평점
      example: '9.5'
    hashtag:
      type: string
      description: 해시태크
    homepageUrl:
      type: string
      description: 홈페이지 주소
    htmlYn:
      type: string
      description: html yn
      enum:
        - 'y'
        - 'n'
    imageUrl:
      type: string
      description: 장소 이미지 주소
    informationUse:
      $ref: '#/components/schemas/instagramUrl'
    instagramUrl:
      type: string
      description: 이용안내/정보(부가서비스포함)
    keyword:
      type: string
      description: 키워드
    latitude:
      type: number
      description: 위도 좌표
    linkUrl:
      type: string
      description: 링크 주소
    loginId:
      type: string
      example: petme@petme.kr
      description: 로그인 아이디(이메일 주소 또는 sns 사용자 아이디)
    loginType:
      type: string
      description: 로그인 타입
      enum:
        - kakao
        - google
        - apple
        - email
    longitude:
      type: number
      description: 경도 좌표
    lotNumberAddress:
      type: string
      description: 지번 주소
    monthlyRanking:
      type: integer
      description: 월간 랭킹
    newPassword:
      type: string
      example: '********'
      description: 패스워드
    noticeGubun:
      type: string
      description: 공지사항 타입
    noticeId:
      type: integer
      description: 공지 아이디
    openStatus:
      type: string
      description: 영업 구분
    openTime:
      type: string
      description: 영업 시작 시간
    openYn:
      type: string
      description: 영업 여부
    order:
      type: integer
      example: 1
      description: 정렬 순서
    os:
      type: string
      description: 단말기 os 정보
    otp:
      type: string
      example: '3454'
      description: otp
    page:
      type: integer
      description: 페이지 번호
      example: 1
    password:
      type: string
      example: '********'
      description: 비밀번호(사용자 비번 또는 sns 인증토큰)
    paymentMethod:
      type: string
      description: 결제 수단
    period:
      type: string
      description: 기간
      enum:
        - 일간
        - 주간
        - 월간
    phone:
      type: string
      example: '01033201234'
      description: 휴대폰 번호
    placeId:
      type: integer
      description: 장소 아이디
    placeNam:
      type: string
      description: 장소 이름
      example: 해뜨는 동물병원
    placeSummary:
      type: string
      description: 장소 요약
    pointAmount:
      type: integer
      example: 2000
      description: 포인트
    pointGubun:
      type: string
      description: 포인트 타입
    pushOnOff:
      type: string
      description: 푸시 허용 여부
      enum:
        - 'on'
        - 'off'
    qnaId:
      type: integer
      description: Q&A 아이디
    raboratoryId:
      type: integer
      description: 팻연구소콘텐츠 아이디
    ranking:
      type: string
      description: 랭킹
    rankingOrder:
      type: string
      description: 랭킹 정렬순서
      enum:
        - 일간
        - 주간
        - 월간
        - 거리
        - 리뷰
    readCount:
      type: integer
      description: 조회수
    reason:
      type: string
      description: 사유
    receiveInformationYn:
      type: string
      description: 마케팅 활용 동의 여부
      enum:
        - 'y'
        - 'n'
    registerTime:
      type: string
      description: 작성일
      example: 23.02.15
    requiredYn:
      type: string
      example: 'y'
      description: 필수 여부
    reviewCount:
      type: integer
      example: 10
      description: 리뷰수
    reviewId:
      type: integer
      description: 리뷰 아이디
    sido:
      type: string
      description: 시도
      example: 서울특별시
    sigungu:
      type: string
      description: 시군구
      example: 강남구
    size:
      type: integer
      description: 페이지 크기
      example: 4
    streetNameAddress:
      type: string
      description: 주소
    termsId:
      type: integer
      example: 3
      description: 약관 아이디
    title:
      type: string
      description: 제목
    token:
      type: string
      description: 인증 토큰
    totalCount:
      type: integer
      description: 전체 글 갯수
    totalReviewCount:
      type: integer
      description: 전체 리뷰수
    usedPoint:
      type: integer
      description: 이용 포인트
    userName:
      type: string
      example: 홍길동
      description: 사용자 명
    uuid:
      type: string
      description: 디바이스 식별자
    visitorReviewCount:
      type: integer
      description: 방문자 리뷰수
    watchCount:
      type: integer
      example: 5
      description: 찜갯수
    watchGubun:
      type: string
      description: 찜 구분
      example:
        - 장소
        - 콘텐츠
        - 연구소
    watchId:
      type: integer
      description: 찜 아이디
    wayToCome1:
      type: string
      description: 오시는 길 1
    wayToCome2:
      type: string
      description: 오시는 길 2
    weekendOpenYn:
      type: string
      description: 주말 개점 여부
      enum:
        - 'y'
        - 'n'
    weelkyRanking:
      type: integer
      description: 주간 랭킹
    withdrawalCause:
      type: string
      description: 탈퇴 사유
    writeTime:
      type: string
      description: 게시글 작성일
    writer:
      type: string
      description: 작성자
      example: 고양이가 최고야
    writerName:
      type: string
      description: 작성자 이름
    youtubeUrl:
      type: string
      description: 유튜브 주소
    zipcode:
      type: string
      description: 우편 번호
      example: 06195
