openapi: 3.0.2
info:
  title: Petme3 API
  version: '0.1'
servers:
  - url: 'https://api.server.test/v1'
paths:
  /v1/login:
    post:
      summary: 로그인
      description: |
        소셜 및 이메일 로그인.  소셜 로그인은 인증이 성공 되었을때 인증 정보로 호출한다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - loginId
                - password
                - loginType
              properties:
                loginId:
                  $ref: '#/components/schemas/loginId'
                password:
                  $ref: '#/components/schemas/password'
                loginType:
                  $ref: '#/components/schemas/loginType'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                required:
                  - token
                properties:
                  token:
                    $ref: '#/components/schemas/token'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/emails:
    get:
      summary: 이메일 중복 확인
      description: |
        회원 가입시 이메일 중복 체크를 하기 위함. 200 응답은 에러, 204 응답이 성공이다.
      parameters:
        - name: email
          in: query
          description: 이메일
          required: true
          schema:
            $ref: '#/components/schemas/email'
      responses:
        '200':
          description: 등록된 이메일(에러)
        '204':
          description: 미사용 이메일(정상)
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/terms:
    get:
      summary: 약관 목록 조회
      description: |
        약관은 여러개로 배열로 리턴됨. requiredYn이 'y' 인것은 필수약관, 'n' 인것은 선택 약관이다. order 필드는 화면 표시 순서를 위해 사용하는데, 불필요할 경우 삭제할 예정.
      responses:
        '200':
          description: 정상
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: 약관 내용
                  required:
                    - title
                    - content
                    - requiredYn
                    - order
                  properties:
                    title:
                      $ref: '#/components/schemas/title'
                    content:
                      $ref: '#/components/schemas/content'
                    requiredYn:
                      $ref: '#/components/schemas/requiredYn'
                    order:
                      $ref: '#/components/schemas/order'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/opts:
    post:
      summary: SMS 인증
      description: 회원가입에서 휴대폰 인증을 위해 사용한다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  $ref: '#/components/schemas/phone'
              required:
                - phone
      responses:
        '201':
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/password:
    post:
      summary: 비빌번호 찾기(재설정)
      description: |
        로그인 전 비밀번호 찾기(재설정) 에서 사용한다. 패스워드 확인은 UI 로직에서 처리. 기존에 sms 인증과 비밀번호 재설정의 2단계를 1단계로 변경하여 입력값을 한꺼번에 전송.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  $ref: '#/components/schemas/phone'
                otp:
                  $ref: '#/components/schemas/otp'
                password:
                  $ref: '#/components/schemas/password'
              required:
                - phone
                - otp
                - password
      responses:
        '201':
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users:
    get:
      security:
        - bearerAuth: []
      summary: 내정보 조회
      description: |
        마이페이지에서 사용한다. 인증토큰을 통해 사용자를 식별하기 때문에 별도의 요청 값은 없다.
      responses:
        '200':
          description: 정상
          content:
            application/json:
              schema:
                type: object
                required:
                  - userName
                  - email
                  - reviewCount
                  - point
                  - watchCount
                properties:
                  userName:
                    $ref: '#/components/schemas/userName'
                  email:
                    $ref: '#/components/schemas/email'
                  reviewCount:
                    $ref: '#/components/schemas/reviewCount'
                  point:
                    $ref: '#/components/schemas/point'
                  watchCount:
                    $ref: '#/components/schemas/watchCount'
    post:
      summary: 회원 가입
      description: |
        자체 회원 가입 화면에서 사용한다. 소셜 로그인을 통한 회원가입은 휴대폰 번호를 수집할 수 없지만, 사용자에게 추가 정보를 입력 받는 기획이 없다. 비밀번호 확인은 UI 로직으로 처리한다. 필수약관에 대한 동의 여부는 UI 로직으로 처리한다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - loginId
                - password
                - phone
                - otp
                - termsIds
              properties:
                loginId:
                  $ref: '#/components/schemas/loginId'
                password:
                  $ref: '#/components/schemas/password'
                phone:
                  $ref: '#/components/schemas/phone'
                otp:
                  $ref: '#/components/schemas/otp'
                termsIds:
                  type: array
                  items:
                    example:
                      - 1
                      - 2
                      - 3
                    $ref: '#/components/schemas/termsId'
      responses:
        '201':
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/email:
    put:
      summary: 비밀번호 수정
      description: |
        내정보 수정 > 비밀번호 변경 로그인 전 비밀번호 찾기의 경우 sms otp를 확인하는  비밀번호 확인은 UI에서 처리한다.
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  $ref: '#/components/schemas/password'
                newPassword:
                  $ref: '#/components/schemas/newPassword'
              required:
                - password
                - newPassword
      responses:
        '200':
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/password:
    put:
      summary: 비밀번호 수정
      description: |
        내정보 수정 > 비밀번호 변경 로그인 전 비밀번호 찾기의 경우 sms otp를 확인하는  비밀번호 확인은 UI에서 처리한다.
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  $ref: '#/components/schemas/password'
                newPassword:
                  $ref: '#/components/schemas/newPassword'
              required:
                - password
                - newPassword
      responses:
        '200':
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/name:
    put:
      summary: 내정보 수정
      description: |
        내정보 > 닉네임 수정에서 사용. 회원가입시 닉네임 생성에 문제가 없는지 확인 필요.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userName:
                  $ref: '#/components/schemas/userName'
              required:
                - userName
      responses:
        '200':
          description: Ok
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/phone:
    put:
      summary: 휴대폰번호 변경
      description: |
        내정보 > 휴대폰번호 변경에서 사용. 서버에서 otp 체크, 휴대폰 중복 체크 필요.
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  $ref: '#/components/schemas/phone'
                otp:
                  $ref: '#/components/schemas/otp'
              required:
                - phone
                - otp
      responses:
        '200':
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/withdraw:
    put:
      summary: 회원 탈퇴
      description: |
        회원 탈퇴
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  $ref: '#/components/schemas/reason'
      responses:
        '200':
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/reviews:
    get:
      summary: 내 리뷰 목록
      description: |
        내정보 > 리뷰에서 사용
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    reviewId:
                      $ref: '#/components/schemas/reviewId'
                    grade:
                      $ref: '#/components/schemas/grade'
                    placeName:
                      $ref: '#/components/schemas/placeNam'
                    registerTime:
                      $ref: '#/components/schemas/registerTime'
                    keyword:
                      $ref: '#/components/schemas/keyword'
                    readCount:
                      $ref: '#/components/schemas/readCount'
                    content:
                      $ref: '#/components/schemas/content'
                  required:
                    - reviewId
                    - grade
                    - palceName
                    - registerTime
                    - keyword
                    - readCount
                    - content
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/points:
    get:
      summary: 포인트 사용 내역
      description: |
        내정보 > 포인트. 포인트 이력과 장소의 연결고리가 없어 추후 업데이트 예정.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                required:
                  - currentPoint
                  - pointHistories
                properties:
                  currentPoint:
                    $ref: '#/components/schemas/currentPoint'
                  pointHistories:
                    type: array
                    items:
                      type: object
                      properties:
                        pointGubun:
                          $ref: '#/components/schemas/pointGubun'
                        usedPoint:
                          $ref: '#/components/schemas/usedPoint'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/users/watches:
    get:
      summary: 찜 목록
      description: |
        내 정보 > 찜 목록 조회
      security:
        - bearerAuth: []
      parameters:
        - name: watchGubun
          in: query
          description: 찜 구분
          required: true
          schema:
            $ref: '#/components/schemas/watchGubun'
        - name: page
          in: query
          required: true
          description: 페이지 번호
          schema:
            $ref: '#/components/schemas/page'
        - name: size
          in: query
          required: true
          description: 페이지 사이즈
          schema:
            $ref: '#/components/schemas/size'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    content:
      type: string
      description: 내용
    currentPoint:
      type: integer
      description: 현재 포인트
    email:
      type: string
      example: petme@petme.kr
      description: 이메일
    error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: 요청 정보가 올바르지 않습니다
          description: 에러 메세지
        cause:
          type: string
          description: 상세 메세지
    grade:
      type: string
      description: 평점
      example: '9.5'
    keyword:
      type: string
      description: 키워드
    loginId:
      type: string
      example: petme@petme.kr
      description: 로그인 아이디(이메일 주소 또는 sns 사용자 아이디)
    loginType:
      type: string
      description: 로그인 타입
      enum:
        - kakao
        - google
        - apple
        - email
    newPassword:
      type: string
      example: '********'
      description: 패스워드
    order:
      type: integer
      example: 1
      description: 정렬 순서
    otp:
      type: string
      example: '3454'
      description: otp
    page:
      type: integer
      description: 페이지 번호
      example: 1
    password:
      type: string
      example: '********'
      description: 비밀번호(사용자 비번 또는 sns 인증토큰)
    phone:
      type: string
      example: '01033201234'
      description: 휴대폰 번호
    placeNam:
      type: string
      description: 장소 이름
      example: 해뜨는 동물병원
    point:
      type: integer
      example: 2000
      description: 포인트
    pointGubun:
      type: string
      description: 포인트 타입
    readCount:
      type: integer
      description: 조회수
    reason:
      type: string
      description: 사유
    registerTime:
      type: string
      description: 작성일
      example: 23.02.15
    requiredYn:
      type: string
      example: 'y'
      description: 필수 여부
    reviewCount:
      type: integer
      example: 10
      description: 리뷰수
    reviewId:
      type: integer
      description: 리뷰 아이디
    size:
      type: integer
      description: 페이지 크기
      example: 4
    termsId:
      type: integer
      example: 3
      description: 약관 아이디
    title:
      type: string
      description: 제목
    token:
      type: string
      description: 인증 토큰
    totalReviewCount:
      type: integer
      description: 전체 리뷰수
    usedPoint:
      type: integer
      description: 이용 포인트
    userName:
      type: string
      example: 홍길동
      description: 사용자 명
    watchCount:
      type: integer
      example: 5
      description: 찜갯수
    watchGubun:
      type: string
      description: 찜 구분
      example:
        - 장소
        - 콘텐츠
        - 연구소
