openapi: "3.0.2"
info:
  title: Petme3 API
  version: "0.1"
servers:
  - url: https://api.server.test/v1
paths:
  /v1/login:
    post:
      summary: 로그인
      description: > 
        소셜 및 이메일 로그인. 
        소셜 로그인은 인증이 성공 되었을때 인증 정보로 호출한다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - loginId
                - password
                - loginType
              properties:
                loginId:
                  $ref: '#/components/schemas/LoginId'
                password:
                  $ref: '#/components/schemas/Password'
                loginType:
                  $ref: '#/components/schemas/LoginType'
      responses:
        "200":
          description: 성공
          content:
            application/json:
              schema:
                type: object
                required:
                  - token
                properties:
                  token:
                    $ref: '#/components/schemas/Token'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/emails:
    get:
      summary: 이메일 중복 확인
      description: >
        회원 가입시 이메일 중복 체크를 하기 위함.
        200 응답은 에러, 204 응답이 성공이다.
      parameters:
        - name: email
          in: query
          description: 이메일
          required: true
          schema:
            $ref: '#/components/schemas/Email'
      responses:
        "200":
          description: 등록된 이메일(에러)
        "204":
          description: 미사용 이메일(정상)
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/terms:
    get:
      summary: 약관 목록 조회
      description: >
        약관은 여러개로 배열로 리턴됨.
        requiredYn이 'y' 인것은 필수약관, 'n' 인것은 선택 약관이다.
        order 필드는 화면 표시 순서를 위해 사용하는데, 불필요할 경우 삭제할 예정.
      responses:
        "200":
          description: 정상
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: 약관 내용
                  required:
                    - title
                    - content
                    - requiredYn
                    - order
                  properties:
                    title:
                      $ref: '#/components/schemas/Title'
                    content:
                      $ref: '#/components/schemas/Content'
                    requiredYn:
                      $ref: '#/components/schemas/RequiredYn'
                    order:
                      $ref: '#/components/schemas/Order'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/otps:
    post:
      summary: SMS 인증
      description: 회원가입에서 휴대폰 인증을 위해 사용한다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  $ref: '#/components/schemas/Phone'
              required:
                - phone
      responses:
        "201":
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/password:
    post:
      summary: 비빌번호 찾기(재설정)
      description: >
        로그인 전 비밀번호 찾기(재설정) 에서 사용한다.
        패스워드 확인은 UI 로직에서 처리.
        기존에 sms 인증과 비밀번호 재설정의 2단계를 1단계로 변경하여 입력값을 한꺼번에 전송.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  $ref: '#/components/schemas/Phone'
                otp:
                  $ref: '#/components/schemas/Otp'
                password:
                  $ref: '#/components/schemas/Password'
              required:
                - phone
                - otp
                - password
      responses:
        "201":
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/users:
    get:
      security:
        - bearerAuth: []
      summary: 내정보 조회
      description: >
        마이페이지에서 사용한다.
        인증토큰을 통해 사용자를 식별하기 때문에 별도의 요청 값은 없다.
      responses:
        "200":
          description: 정상
          content:
            application/json:
              schema:
                type: object
                required:
                  - userName
                  - email
                  - reviewCount
                  - point
                  - watchCount
                properties:
                  userName:
                    $ref: '#/components/schemas/UserName'
                  email:
                    $ref: '#/components/schemas/Email'
                  reviewCount:
                    $ref: '#/components/schemas/ReviewCount'
                  point:
                    $ref: '#/components/schemas/Point'
                  watchCount:
                    $ref: '#/components/schemas/WatchCount'
    post:
      summary: 회원 가입
      description: >
        자체 회원 가입 화면에서 사용한다.
        소셜 로그인을 통한 회원가입은 휴대폰 번호를 수집할 수 없지만, 사용자에게 추가 정보를 입력 받는 기획이 없다.
        비밀번호 확인은 UI 로직으로 처리한다.
        필수약관에 대한 동의 여부는 UI 로직으로 처리한다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - loginId
                - password
                - phone
                - otp
                - termsIds
              properties:
                loginId:
                  $ref: '#/components/schemas/LoginId'
                password:
                  $ref: '#/components/schemas/Password'
                phone:
                  $ref: '#/components/schemas/Phone'
                otp:
                  $ref: '#/components/schemas/Otp'
                termsIds:
                  type: array
                  items:
                    example: [1,2,3]
                    $ref: '#/components/schemas/TermsId'
      responses:
        "201":
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/users/email:
    get:
      summary: 이메일 찾기
      description: >
        로그인 화면의 이메일 주소 찾기에서 사용한다.
        응답의 이메일 주소의 마스킹 처리는 UI 개발자와 협의가 필요하다.
      security:
        - bearerAuth: [ ]
      parameters:
        - name: phone
          in: query
          required: true
          description: 휴대폰번호
          schema:
            $ref: '#/components/schemas/Phone'
        - name: otp
          in: query
          required: true
          description: otp
          schema:
            $ref: '#/components/schemas/Otp'
      responses:
        "200":
          description: 성공
          content:
            application/json:
              schema:
                type: object
                required:
                  - email
                properties:
                  email:
                    $ref: '#/components/schemas/Email'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/users/password:
    put:
      summary: 비밀번호 수정
      description: >
        내정보 수정 > 비밀번호 변경
        로그인 전 비밀번호 찾기의 경우 sms otp를 확인하는 
        비밀번호 확인은 UI에서 처리한다.
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  $ref: '#/components/schemas/Password'
                newPassword:
                  $ref: '#/components/schemas/NewPassword'
              required:
                - password
                - newPassword
      responses:
        "200":
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/users/name:
    put:
      summary: 내정보 수정
      description: >
        내정보 > 닉네임 수정에서 사용.
        회원가입시 닉네임 생성에 문제가 없는지 확인 필요.
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userName:
                  $ref: '#/components/schemas/UserName'
              required:
                - userName
      responses:
        '200':
          description: Ok
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/users/phone:
    put:
      summary: 휴대폰번호 변경
      description: >
        내정보 > 휴대폰번호 변경에서 사용.
        서버에서 otp 체크, 휴대폰 중복 체크 필요.
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  $ref: '#/components/schemas/Phone'
                otp:
                  $ref: '#/components/schemas/Otp'
              required:
                - phone
                - otp
      responses:
        "200":
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/users/withdraw:
    put:
      summary: 회원 탈퇴
      description: >
        회원 탈퇴
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  $ref: '#/components/schemas/Reason'
      responses:
        "200":
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/users/reviews:
    get:
      summary: 내 리뷰 목록
      description: >
        내정보 > 리뷰에서 사용
      security:
        - bearerAuth: [ ]
      responses:
        "200":
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    reviewId:
                      $ref: '#/components/schemas/ReviewId'
                    grade:
                      $ref: '#/components/schemas/Grade'
                    placeName:
                      $ref: '#/components/schemas/PlaceName'
                    registerTime:
                      $ref: '#/components/schemas/RegisterTime'
                    keyword:
                      $ref: '#/components/schemas/Keyword'
                    readCount:
                      $ref: '#/components/schemas/ReadCount'
                    content:
                      $ref: '#/components/schemas/Content'
                  required:
                    - reviewId
                    - grade
                    - palceName
                    - registerTime
                    - keyword
                    - readCount
                    - content
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/users/points:
    get:
      summary: 포인트 사용 내역
      description: >
        내정보 > 포인트.
        포인트 이력과 장소의 연결고리가 없어 추후 업데이트 예정.
      security:
        - bearerAuth: [ ]
      responses:
        "200":
          description: 성공
          content:
            application/json:
              schema:
                type: object
                required:
                  - currentPoint
                  - pointHistories
                properties:
                  currentPoint:
                    $ref: '#/components/schemas/CurrentPoint'
                  pointHistories:
                    type: array
                    items:
                      type: object
                      properties:
                        pointGubun:
                          $ref: '#/components/schemas/PointGubun'
                        usedPoint:
                          $ref: '#/components/schemas/UsedPoint'
      default:
        description: Error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
  /v1/users/watchs:
    get:
      summary: 찜 목록
      description: >
        내 정보 > 찜 목록 조회
      security:
        - bearerAuth: [ ]
      parameters:
        - name: watchGubun
          in: query
          description: 찜 구분
          required: true
          schema:
            $ref: '#/components/schemas/WatchGubun'
        - name: page
          in: query
          required: true
          description: 페이지 번호
          schema:
            $ref: '#/components/schemas/Page'
        - name: size
          in: query
          required: true
          description: 페이지 사이즈
          schema:
            $ref: '#/components/schemas/Size'
      responses:
        200:
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /v1/reviews/count:
    get:
      summary: 누적 리뷰수
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - totalReviewCount
                properties:
                  totalReviewCount:
                    $ref: '#/components/schemas/TotalReviewCount'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/reviews:
    get:
      summary: 베스트 리뷰 목록
      parameters:
        - name: businessGubun
          in: query
          required: true
          description: 장소 구분
          schema:
            $ref: '#/components/schemas/BusinessGubun'
        - name: zipcode
          in: query
          required: false
          description: 값이 null인 경우는 위도, 경도로 내 주변 검색
          schema:
            $ref: '#/components/schemas/Zipcode'
        - name: latitude
          in: query
          required: true
          description: 위도 좌표
          schema:
            $ref: '#/components/schemas/Latitude'
        - name: longitude
          in: query
          required: true
          description: 경도 좌표
          schema:
            $ref: '#/components/schemas/Longitude'
        - name: page
          in: query
          required: true
          description: 페이지 번호
          schema:
            $ref: '#/components/schemas/Page'
        - name: size
          in: query
          required: true
          description: 페이지 사이즈
          schema:
            $ref: '#/components/schemas/Size'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: 리뷰
                  properties:
                    grade:
                      $ref: '#/components/schemas/Grade'
                    registerTime:
                      $ref: '#/components/schemas/RegisterTime'
                    writer:
                      $ref: '#/components/schemas/Writer'
                    content:
                      $ref: '#/components/schemas/Content'
                    placeName:
                      $ref: '#/components/schemas/PlaceName'
                    imageUrls:
                      type: array
                      items:
                        $ref: '#/components/schemas/ImageUrl'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/reviews/{reviewId}:
    delete:
      summary: 리뷰 삭제
      description: >
        마이 리뷰 > 삭제에서 사용
      security:
        - bearerAuth: [ ]
      parameters:
        - name: reviewId
          in: path
          required: true
          description: 리뷰 아이디
          schema:
            $ref: '#/components/schemas/ReviewId'
      responses:
        "200":
          description: 성공
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/places/history:
    get:
      summary: 최근 본 장소
      parameters:
        - name: page
          in: query
          required: true
          description: 페이지 번호
          schema:
            $ref: '#/components/schemas/Page'
        - name: size
          in: query
          required: true
          description: 페이지 사이즈
          schema:
            $ref: '#/components/schemas/Size'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    placeName:
                      $ref: '#/components/schemas/PlaceName'
                    sido:
                      $ref: '#/components/schemas/Sido'
                    sigungu:
                      $ref: '#/components/schemas/Sigungu'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rankings:
    get:
      summary: 랭킹 목록
      parameters:
        - name: businessGubun
          in: query
          required: true
          description: 장소 구분
          schema:
            $ref: '#/components/schemas/BusinessGubun'
        - name: zipcode
          in: query
          required: false
          description: 값이 null인 경우는 위도, 경도로 내 주변 검색
          schema:
            $ref: '#/components/schemas/Zipcode'
        - name: rankingOrder
          in: query
          required: true
          description: 기간
          schema:
            $ref: '#/components/schemas/RankingOrder'
        - name: weekendOpenYn
          in: query
          required: true
          description: 주말 진료 여부
          schema:
            $ref: '#/components/schemas/WeekendOpenYn'
        - name: allDayOpenYn
          in: query
          required: true
          description: 24시간 진료 여부
          schema:
            $ref: '#/components/schemas/AllDayOpenYn'
        - name: latitude
          in: query
          required: true
          description: 위도 좌표
          schema:
            $ref: '#/components/schemas/Latitude'
        - name: longitude
          in: query
          required: true
          description: 경도 좌표
          schema:
            $ref: '#/components/schemas/Longitude'
        - name: page
          in: query
          required: true
          description: 페이지 번호
          schema:
            $ref: '#/components/schemas/Page'
        - name: size
          in: query
          required: true
          description: 페이지 사이즈
          schema:
            $ref: '#/components/schemas/Size'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: 랭킹
                  properties:
                    placeId:
                      $ref: '#/components/schemas/PlaceId'
                    placeName:
                      $ref: '#/components/schemas/PlaceName'
                    period:
                      $ref: '#/components/schemas/Period'
                    ranking:
                      $ref: '#/components/schemas/Ranking'
                    blogReviewCount:
                      $ref: '#/components/schemas/BlogReviewCount'
                    visitorReviewCount:
                      $ref: '#/components/schemas/VisitorReviewCount'
                    distance:
                      $ref: '#/components/schemas/Distance'
                    openYn:
                      $ref: '#/components/schemas/OpenYn'
                    openTime:
                      $ref: '#/components/schemas/OpenTime'
                    imageUrls:
                      type: array
                      items:
                        $ref: '#/components/schemas/ImageUrl'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: '요청 정보가 올바르지 않습니다'
          description: 에러 메세지
        cause:
          type: string
          description: 상세 메세지
    LoginId:
      type: string
      example: 'petme@petme.kr'
      description: 로그인 아이디(이메일 주소 또는 sns 사용자 아이디)
    Password:
      type: string
      example: '********'
      description: 비밀번호(사용자 비번 또는 sns 인증토큰)
    NewPassword:
      type: string
      example: '********'
      description: 패스워드
    NewPasswordConfirm:
      type: string
      example: '********'
      description: 패스워드 확인
    Otp:
      type: string
      example: '3454'
      description: otp
    LoginType:
      type: string
      description: 로그인 타입
      enum: [kakao, google, apple, email]
    Phone:
      type: string
      example: '01033201234'
      description: 휴대폰 번호
    Email:
      type: string
      example: 'petme@petme.kr'
      description: 이메일
    UserId:
      type: integer
      example: 10
      description: 사용자 아이디
    Token:
      type: string
      description: 인증 토큰
    ReviewCount:
      type: integer
      example: 10
      description: 리뷰수
    Point:
      type: integer
      example: 2000
      description: 포인트
    WatchCount:
      type: integer
      example: 5
      description: 찜갯수
    UserName:
      type: string
      example: '홍길동'
      description: 사용자 명
    Content:
      type: string
      description: 내용
    RequiredYn:
      type: string
      example: 'y'
      description: 필수 여부
    Order:
      type: integer
      example: 1
      description: 정렬 순서
    TermsId:
      type: integer
      example: 3
      description: 약관 아이디
    Title:
      type: string
      description: 제목
    TotalReviewCount:
      type: integer
      description: 전체 리뷰수
    Zipcode:
      type: string
      description: 우편 번호
      example: 06195
    PlaceName:
      type: string
      description: 장소 이름
      example: "해뜨는 동물병원"
    Period:
      type: string
      description: 기간
      enum: [일간, 주간, 월간]
    Page:
      type: integer
      description: 페이지 번호
      example: 1
    Size:
      type: integer
      description: 페이지 크기
      example: 4
    PlaceId:
      type: integer
      description: 장소 아이디
    Ranking:
      type: string
      description: 랭킹
    Latitude:
      type: number
      description: 위도 좌표
    Longitude:
      type: number
      description: 경도 좌표
    PlaceSummary:
      type: string
      description: 장소 요약
    Distance:
      type: string
      description: 거리
      example: "1.2km"
    BlogReviewCount:
      type: integer
      description: 블로그 리뷰수
    BusinessGubun:
      type: string
      description: 장소 구분
      enum: [병원, 약국, 미용, 용품, 산책, 카페, 호텔]
    VisitorReviewCount:
      type: integer
      description: 방문자 리뷰수
    ImageUrl:
      type: string
      description: 장소 이미지 주소
    Grade:
      type: string
      description: 평점
      example: "9.5"
    Writer:
      type: string
      description: 작성자
      example: "고양이가 최고야"
    RegisterTime:
      type: string
      description: 작성일
      example: 23.02.15
    Sido:
      type: string
      description: 시도
      example: "서울특별시"
    Sigungu:
      type: string
      description: 시군구
      example: "강남구"
    RankingOrder:
      type: string
      description: 랭킹 정렬순서
      enum: [일간, 주간, 월간, 거리, 리뷰]
    WeekendOpenYn:
      type: string
      description: 주말 개점 여부
      enum: [y, n]
    AllDayOpenYn:
      type: string
      description: 24시간 개점 여부
      enum: [y, n]
    OpenYn:
      type: string
      description: 영업 여부
    OpenTime:
      type: string
      description: 영업 시작 시간
    Reason:
      type: string
      description: 사유
    Keyword:
      type: string
      description: 키워드
    ReadCount:
      type: integer
      description: 조회수
    ReviewId:
      type: integer
      description: 리뷰 아이디
    CurrentPoint:
      type: integer
      description: 현재 포인트
    UsedPoint:
      type: integer
      description: 이용 포인트
    PointGubun:
      type: string
      description: 포인트 타입
    WatchGubun:
      type: string
      description: 찜 구분
      example: [장소, 콘텐츠, 연구소]

